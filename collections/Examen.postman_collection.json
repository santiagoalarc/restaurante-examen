{
	"info": {
		"_postman_id": "2a71105e-ef17-4228-a9db-b12bd8e0b81b",
		"name": "Examen",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44859486"
	},
	"item": [
		{
			"name": "Platos",
			"item": [
				{
					"name": "Crear un plato válido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.environment.set(\"dishId\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Plato1\",\n    \"descripcion\": \"descripcion\",\n    \"precio\": 500,\n    \"categoria\": \"entrada\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dishes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear un plato inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let requestBody = pm.request.body.raw;",
									"let bodyJson = JSON.parse(requestBody);",
									"let categoria = bodyJson.categoria || null;",
									"let data = pm.response.json();",
									"",
									"pm.environment.set(\"dishId\", data.id);",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"",
									"    let expectedMessage = `La categoría '${categoria}' no es válida`;",
									"    let responseBody = pm.response.text();",
									"",
									"    pm.expect(responseBody).to.include(expectedMessage);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Plato1\",\n    \"descripcion\": \"descripcion\",\n    \"precio\": 500,\n    \"categoria\": \"exotico\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dishes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Todos los platos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of dishes > 0', function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.length).to.be.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Mondongos\",\n    \"direccion\": \"Calle 12 34 - 67\",\n    \"tipoCocina\": \"Chilena\",\n    \"paginaWeb\": \"www.mondongos.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dishes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Un plato por id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Mondongos\",\n    \"direccion\": \"Calle 12 34 - 67\",\n    \"tipoCocina\": \"Chilena\",\n    \"paginaWeb\": \"www.mondongos.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dishes/{{dishId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dishes",
								"{{dishId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Un plato por id invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   var dishIdInvalid = pm.collectionVariables.get(\"dishIdInvalid\");",
									"   pm.expect(data.message).to.eql(\"El plato con id \" + dishIdInvalid + \" no fue encontrado\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Mondongos\",\n    \"direccion\": \"Calle 12 34 - 67\",\n    \"tipoCocina\": \"Chilena\",\n    \"paginaWeb\": \"www.mondongos.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dishes/{{dishIdInvalid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dishes",
								"{{dishIdInvalid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un plato",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Plato1 Actualizado\",\n    \"descripcion\": \"descripcion\",\n    \"precio\": 500,\n    \"categoria\": \"entrada\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants/{{restaurantId}}/dishes/{{dishId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"{{restaurantId}}",
								"dishes",
								"{{dishId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un plato id no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   var dishIdInvalid = pm.collectionVariables.get(\"dishIdInvalid\");",
									"   pm.expect(data.message).to.eql(\"El plato con id \" + dishIdInvalid + \" no fue encontrado\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Plato1 Actualizado\",\n    \"descripcion\": \"descripcion\",\n    \"precio\": 500,\n    \"categoria\": \"entrada\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dishes/{{dishIdInvalid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dishes",
								"{{dishIdInvalid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un plato por id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Mondongos\",\n    \"direccion\": \"Calle 12 34 - 67\",\n    \"tipoCocina\": \"Chilena\",\n    \"paginaWeb\": \"www.mondongos.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dishes/{{dishId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dishes",
								"{{dishId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un plato por id invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   var dishIdInvalid = pm.collectionVariables.get(\"dishIdInvalid\");",
									"   pm.expect(data.message).to.eql(\"El plato con id \" + dishIdInvalid + \" no fue encontrado\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dishes/{{dishIdInvalid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dishes",
								"{{dishIdInvalid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Restaurante",
			"item": [
				{
					"name": "Crear un restaurante válido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.environment.set(\"restaurantId\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Mondongos\",\n    \"direccion\": \"Calle 12 34 - 67\",\n    \"tipoCocina\": \"Colombiana\",\n    \"paginaWeb\": \"www.mondongos.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear un restaurante inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let requestBody = pm.request.body.raw;",
									"let bodyJson = JSON.parse(requestBody);",
									"let tipoCocina = bodyJson.tipoCocina || null;",
									"let data = pm.response.json();",
									"",
									"pm.environment.set(\"dishId\", data.id);",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"",
									"    let expectedMessage = `El tipo de cocina '${tipoCocina}' no es válida`;",
									"    let responseBody = pm.response.text();",
									"",
									"    pm.expect(responseBody).to.include(expectedMessage);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Mondongos\",\n    \"direccion\": \"Calle 12 34 - 67\",\n    \"tipoCocina\": \"Chilena\",\n    \"paginaWeb\": \"www.mondongos.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Todos los restaurantes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of restaurants > 0', function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.length).to.be.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Un restaurante por id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants/{{restaurantId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"{{restaurantId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Un restaurante por id invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   var restaurantIdInvalid = pm.collectionVariables.get(\"restaurantIdInvalid\");",
									"   pm.expect(data.message).to.eql(\"El restaurante con id \" + restaurantIdInvalid + \" no fue encontrado\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants/{{restaurantIdInvalid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"{{restaurantIdInvalid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar Restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Mondongos Actuliazado\",\n    \"direccion\": \"Calle 12 34 - 67\",\n    \"tipoCocina\": \"Colombiana\",\n    \"paginaWeb\": \"www.mondongos.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants/{{restaurantId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"{{restaurantId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar Restaurante id no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   var restaurantIdInvalid = pm.collectionVariables.get(\"restaurantIdInvalid\");",
									"   pm.expect(data.message).to.eql(\"El restaurante con id \" + restaurantIdInvalid + \" no fue encontrado\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Mondongos Actuliazado\",\n    \"direccion\": \"Calle 12 34 - 67\",\n    \"tipoCocina\": \"Colombiana\",\n    \"paginaWeb\": \"www.mondongos.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants/{{restaurantIdInvalid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"{{restaurantIdInvalid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar restaurante por id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants/{{restaurantId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"{{restaurantId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar restaurante por id invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   var restaurantIdInvalid = pm.collectionVariables.get(\"restaurantIdInvalid\");",
									"   pm.expect(data.message).to.eql(\"El restaurante con id \" + restaurantIdInvalid + \" no fue encontrado\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants/{{restaurantIdInvalid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"{{restaurantIdInvalid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Restaurant-plato",
			"item": [
				{
					"name": "Asociar un plato a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants/{{restaurantId}}/dishes/{{dishId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"{{restaurantId}}",
								"dishes",
								"{{dishId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Asociar un plato no existente a un restaurante Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   var dishIdInvalid = pm.collectionVariables.get(\"dishIdInvalid\");",
									"   pm.expect(data.message).to.eql(\"El plato con id \" + dishIdInvalid + \" no fue encontrado\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants/{{restaurantId}}/dishes/{{dishIdInvalid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"{{restaurantId}}",
								"dishes",
								"{{dishIdInvalid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Todos los platos en un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants/{{restaurantId}}/dishes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"{{restaurantId}}",
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Un plato asociado a un restaurantes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants/{{restaurantId}}/dishes/{{dishId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"{{restaurantId}}",
								"dishes",
								"{{dishId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Un plato no asociado a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants/{{restaurantId}}/dishes/{{dishIdInvalid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"{{restaurantId}}",
								"dishes",
								"{{dishIdInvalid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar los platos que están asociados a un restaurante",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": 1,\n        \"nombre\": \"Plato1 Actualizado 2\",\n        \"descripcion\": \"descripcion\",\n        \"precio\": 500,\n        \"categoria\": \"entrada\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants/{{restaurantId}}/dishes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"{{restaurantId}}",
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar los platos que están asociados a un restaurante Copy",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": 1,\n        \"nombre\": \"Plato1 Actualizado 2\",\n        \"descripcion\": \"descripcion\",\n        \"precio\": 500,\n        \"categoria\": \"entrada\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants/{{restaurantId}}/dishes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"{{restaurantId}}",
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar plato asociado a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants/{{restaurantId}}/dishes/{{dishId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"{{restaurantId}}",
								"dishes",
								"{{dishId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar plato no asociado a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/restaurants/{{restaurantId}}/dishes/{{dishIdInvalid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"{{restaurantId}}",
								"dishes",
								"{{dishIdInvalid}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "localhost:3000",
			"type": "default"
		},
		{
			"key": "dishId",
			"value": "1",
			"type": "default"
		},
		{
			"key": "restaurantId",
			"value": "1",
			"type": "default"
		},
		{
			"key": "dishIdInvalid",
			"value": "-1",
			"type": "default"
		},
		{
			"key": "restaurantIdInvalid",
			"value": "",
			"type": "default"
		}
	]
}